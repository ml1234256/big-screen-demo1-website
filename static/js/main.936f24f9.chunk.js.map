{"version":3,"sources":["shared/px.ts","shared/base-echart-option.ts","shared/create-echarts-option.ts","components/chart-div.tsx","components/chart-1.tsx","components/chart-2.tsx","components/chart-3.tsx","components/chart-4.tsx","components/chart-5.tsx","components/chart-6.tsx","components/chart-7.tsx","components/chart-8.tsx","pages/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["px","n","window","pageWidth","baseEchartOption","textStyle","fontSize","color","title","show","legend","grid","left","top","right","bottom","createEchartOption","option","createOption","xAxis","axisLabel","yAxis","ChartWrapper","styled","div","Title","h2","Content","ChartDiv","props","className","style","display","height","children","ChartDiva","Chart1","chartDiv1","useRef","chartDiv2","useEffect","myChart1","echarts","current","myChart2","options1","data","itemHeight","itemWidth","series","type","radius","center","avoidLabelOverlap","value","name","label","position","distanceToLabelLine","formatter","options","labelLine","length","length2","roseType","itemStyle","shadowBlur","shadowColor","options2","axisTick","axisLine","splitLine","barWidth","borderRadius","setOption","ref","Chart2","Chart3","chartDiv","myChart","tooltip","val","array","split","splice","join","barGap","width","Chart4","option2","Chart5","console","log","boundaryGap","lineStyle","symbolSize","Chart6","symbol","areaStyle","LinearGradient","offset","Chart7","china","require","colors","mapType","areaColor","borderColor","emphasis","ChartText","Chart8","chartDiv3","myChart3","option1","orient","option3","Home","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.936f24f9.chunk.js","sourcesContent":["export const px = (n: any) => {\r\n    return n / 1355 * (window as any).pageWidth;\r\n}","import { px } from \"./px\";\r\n\r\n\r\nexport const baseEchartOption = {\r\n    textStyle: {\r\n            fontSize: px(12),\r\n            color: '#79839E'\r\n        },\r\n        title: { show: false },\r\n        legend: { show: false },\r\n        grid: {\r\n            left: '10%',\r\n            top: '25%',\r\n            right: '10%',\r\n            bottom: '16%'\r\n        },\r\n}\r\n","import { baseEchartOption } from './base-echart-option';\r\nimport { px } from \"./px\";\r\n\r\nexport const createEchartOption = (option: any) => {\r\n    const createOption = {\r\n        ...baseEchartOption,\r\n        ...option,\r\n    }\r\n    if (!(option?.xAxis?.axisLabel?.fontSize)) {\r\n        createOption.xAxis = createOption.xAxis || {};\r\n        createOption.xAxis.axisLabel = createOption.xAxis.axisLabel || {};\r\n        createOption.xAxis.axisLabel.fontSize = px(10);\r\n    }\r\n    if (!(option?.yAxis?.axisLabel?.fontSize)) {\r\n        createOption.yAxis = createOption.yAxis || {};\r\n        createOption.yAxis.axisLabel = createOption.yAxis.axisLabel || {};\r\n        createOption.yAxis.axisLabel.fontSize = px(10);\r\n    }\r\n    return createOption\r\n}\r\n","\r\nimport styled from 'styled-components';\r\n\r\nconst ChartWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height:100%;\r\n    max-height:100%;\r\n    /* border:1px solid #fff; */\r\n`;\r\nconst Title = styled.h2`\r\n`;\r\nconst Content = styled.div`\r\n    width: 100%;\r\n    /* border:1px solid #fff; */\r\n    display: flex;\r\n    flex-grow: 1;\r\n    position: relative;\r\n`;\r\n\r\nexport const ChartDiv = (props:any) => {\r\n    \r\n    return (\r\n        <ChartWrapper>\r\n            <Title className=\"title\">{ props.title }</Title>\r\n            <Content style={{display:'flex', height:'100%'}}>\r\n                {props.children}\r\n            </Content>\r\n        </ChartWrapper>\r\n    )\r\n}","import { useEffect, useRef } from \"react\";\r\nimport * as echarts from 'echarts';\r\nimport styled from 'styled-components';\r\nimport { px } from \"../shared/px\";\r\nimport { createEchartOption } from \"../shared/create-echarts-option\";\r\nimport { ChartDiv } from \"./chart-div\";\r\n\r\n// App 在架数量与分类占比\r\n\r\nconst ChartDiva = styled.div`\r\n    height:100%;\r\n    width: 100%;\r\n    /* border:1px solid #fff; */\r\n    flex-grow: 1;\r\n`\r\n\r\nexport const Chart1 = () => {\r\n    const chartDiv1 = useRef<HTMLDivElement>(null);\r\n    const chartDiv2 = useRef<HTMLDivElement>(null);\r\n        useEffect(() => {\r\n            const myChart1 = echarts.init((chartDiv1 as any).current);\r\n            const myChart2 = echarts.init((chartDiv2 as any).current);\r\n            let options1 = createEchartOption({\r\n                xAxis: {show: false},\r\n                yAxis: { show: false },\r\n                legend: {\r\n                    data: [\"游戏\", \"日常工具\", \"电子商务\", \"生活服务\", \"其他\"],\r\n                   // orient:'vertical',\r\n                    right:'4%',\r\n                    bottom: '0%',\r\n                    itemHeight: px(6),\r\n                    itemWidth: px(6),\r\n                    textStyle: {\r\n                    color: '#fff',\r\n                    fontSize: px(8),\r\n                    }\r\n                },\r\n                series: [{\r\n                    type: 'pie',\r\n                    radius: ['10%', '55%'],\r\n                    center: ['46%', '50%'],\r\n                    avoidLabelOverlap: false, \r\n                    data: [\r\n                        { value: 25.7, name: \"游戏\" },\r\n                        { value: 14.6, name: \"日常工具\" },\r\n                        { value: 9.9, name: \"电子商务\" },\r\n                        { value: 9.0, name: \"生活服务\" },\r\n                        { value: 40.8, name: \"其他\" }\r\n                    ],\r\n                    label: {\r\n                        show: true, position: 'outside', textStyle: {color: 'white', fontSize: px(8)},\r\n                        distanceToLabelLine: 0,\r\n                        formatter(options:any) {\r\n                        return options.value + '%';\r\n                        }\r\n                    },\r\n                    labelLine: {show: true, length:2,length2:8},\r\n                    roseType: 'area',\r\n                    itemStyle: {\r\n                        shadowBlur: px(200),\r\n                        shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                    },\r\n                }]\r\n            });\r\n            let options2 = createEchartOption({\r\n                xAxis: {\r\n                    data: ['2017', '2018', '2019', '2020'],\r\n                    axisTick: { show: false },\r\n                },\r\n                yAxis: {\r\n                    axisLine: {\r\n                        show:true\r\n                    },\r\n                    splitLine: {\r\n                        show: false\r\n                    },\r\n                },\r\n                 grid: {\r\n                    left: '25%',\r\n                    top: '25%',\r\n                    right: '10%',\r\n                    bottom: '16%'\r\n                },\r\n                series: [{\r\n                    type: 'bar',  // color: 'red',\r\n                    data: [402, 456, 367, 345],\r\n                    barWidth: px(6),\r\n                    itemStyle: {\r\n                        borderRadius:[px(3), px(3), 0, 0]\r\n                    }\r\n                }]\r\n            });\r\n            options1 && myChart1.setOption(options1);\r\n            options2 && myChart2.setOption(options2);\r\n            }, [])\r\n    return (\r\n        <ChartDiv title='App 在架数量与分类占比'>\r\n            <ChartDiva ref={chartDiv2} />\r\n            <ChartDiva ref={chartDiv1} />\r\n        </ChartDiv>\r\n        )\r\n}\r\n","import styled from 'styled-components';\r\nimport { ChartDiv } from \"./chart-div\";\r\n\r\n// 网络诈骗分类\r\n\r\n\r\nexport const Chart2 = () => {\r\n    return (\r\n        <ChartDiv title='网络诈骗分类'>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>网络诈骗分类</th>\r\n                        <th>2020年3月</th>\r\n                        <th>2020年12月</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>虚拟中奖信息</td>\r\n                        <td>52.6%</td>\r\n                        <td>47.9%</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>网络兼职</td>\r\n                        <td>33.5%</td>\r\n                        <td>33.3%</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>网络购物</td>\r\n                        <td>33.0%</td>\r\n                        <td>33.0%</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>冒充好友</td>\r\n                        <td>41.2%</td>\r\n                        <td>31.4%</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>钓鱼网站</td>\r\n                        <td>28.2%</td>\r\n                        <td>24.7%</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>虚假招工信息</td>\r\n                        <td>23.7%</td>\r\n                        <td>20.9%</td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n            </table>\r\n        </ChartDiv>\r\n       \r\n    )\r\n}","import { useEffect, useRef } from \"react\";\r\nimport * as echarts from 'echarts';\r\nimport { createEchartOption } from \"../shared/create-echarts-option\";\r\nimport { ChartDiv } from \"./chart-div\";\r\nimport { px } from \"../shared/px\";\r\n\r\n\r\n// 互联网接入设备使用情况\r\n\r\nexport const Chart3 = () => {\r\n    const chartDiv = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        const myChart = echarts.init((chartDiv as any).current);\r\n        let option = createEchartOption({\r\n            tooltip: {},\r\n            legend: {\r\n                data: ['2020.3', '2020.12'],\r\n                bottom: px(2),\r\n                itemHeight: px(6),\r\n                itemWidth: px(12),\r\n                textStyle: {\r\n                    color: '#fff',\r\n                    fontSize: px(8),\r\n                }\r\n            },\r\n            grid: {\r\n                left: '10%',\r\n                top: '10%',\r\n                right: '10%',\r\n                bottom: '30%'\r\n            },\r\n            xAxis: {\r\n                data: ['台式电脑', '笔记本电脑', '手机', '电视', \"平板电脑\"],\r\n                axisTick: { show: false },\r\n                axisLabel: {\r\n                formatter(val:string) {\r\n                    if (val.length > 2) {\r\n                    const array = val.split('');\r\n                    array.splice(2, 0, '\\n');\r\n                    return array.join('');\r\n                    } else {\r\n                    return val;\r\n                    }\r\n                }\r\n        }\r\n            },\r\n            yAxis: {\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n                axisLine: {\r\n                        show:true\r\n                    },\r\n            },\r\n            series: [\r\n                {\r\n                    name:'2020.3',\r\n                    type: 'bar',  // color: 'red',\r\n                    data: [42.7, 35.1, 99.3, 32.0, 29.0],\r\n                    barWidth: px(6),\r\n                    itemStyle: {\r\n                        borderRadius: [px(3), px(3), 0, 0]\r\n                    }\r\n                },\r\n                    {\r\n                    name:'2020.12',\r\n                    type: 'bar',  // color: 'red',\r\n                    data: [32.8, 28.2, 99.7, 24.0, 22.9],\r\n                    barWidth: px(6),\r\n                    barGap: '50%',\r\n                    itemStyle: {\r\n                        borderRadius: [px(3), px(3), 0, 0]\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        option && myChart.setOption(option);\r\n    }, [])\r\n    return (\r\n        <ChartDiv title='互联网接入设备使用情况'>\r\n            <div ref={chartDiv} style={{ height: '100%', width: '100%' }}></div>\r\n        </ChartDiv>\r\n    )\r\n}","import { useEffect, useRef } from \"react\";\r\nimport styled from 'styled-components';\r\nimport * as echarts from 'echarts';\r\nimport { createEchartOption } from \"../shared/create-echarts-option\";\r\nimport { px } from \"../shared/px\";\r\nimport { ChartDiv } from \"./chart-div\";\r\n\r\n// 互联网上市企业类型分布\r\n\r\nconst ChartDiva = styled.div`\r\n    height:100%;\r\n    width: 100%;\r\n    /* border:1px solid #fff; */\r\n`;\r\n\r\nexport const Chart4 = () => {\r\n    const chartDiv2 = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        const myChart2 = echarts.init((chartDiv2 as any).current);\r\n        const option2 = createEchartOption({\r\n            grid: {\r\n                top: '10%',\r\n                left: '20%',\r\n                bottom: '10%'\r\n            },\r\n             xAxis: {\r\n                axisTick: { show: false },\r\n                axisLine: {\r\n                        show:false\r\n                 },\r\n                axisLabel:{show:false},\r\n                splitLine: {\r\n                        show: false\r\n                    },\r\n            },\r\n            yAxis: {\r\n                    axisTick: { show: false },\r\n                    axisLine: {\r\n                        show:false\r\n                    },\r\n                    splitLine: {\r\n                        show: false\r\n                    },\r\n                    data:['其他', '电子商务', '网络金融', '工具软件',  '网络媒体', '网络游戏','文化娱乐']\r\n                },\r\n                series: [\r\n                {\r\n                    type: 'bar',  // color: 'red',\r\n                    data: [30, 30, 30, 30, 30, 30, 30],\r\n                    barWidth: px(6),\r\n                    itemStyle: {\r\n                        borderRadius: [0, px(3), px(3), 0],\r\n                        color:\"rgba(84,112,198, 0.3)\",\r\n                    },\r\n                    \r\n                },\r\n                {\r\n                    type: 'bar',  // color: 'red',\r\n                    data: [23.0, 12.6, 10.5, 7.7, 5.6, 24.5, 16.1],\r\n                    barWidth: px(6),\r\n                    itemStyle: {\r\n                        borderRadius:[0, px(3), px(3), 0]\r\n                        },\r\n                    // showBackground:true,\r\n                    label: {\r\n                        show: true,\r\n                        position: 'outside',\r\n                        textStyle: { color: 'white', fontSize: px(8) },\r\n                        formatter(options:any) {\r\n                            return options.value + '%';\r\n                        }\r\n                    },\r\n                    barGap: '-100%',\r\n                }]\r\n        });\r\n        //option1 && myChart1.setOption(option1);\r\n        option2 && myChart2.setOption(option2)\r\n    },[])\r\n    return (\r\n        <ChartDiv title='互联网上市企业类型分布'>\r\n            <ChartDiva ref={chartDiv2}></ChartDiva>\r\n        </ChartDiv>\r\n    )\r\n}","import { useEffect, useRef } from \"react\";\r\nimport * as echarts from 'echarts';\r\nimport { createEchartOption } from \"../shared/create-echarts-option\";\r\nimport { ChartDiv } from \"./chart-div\";\r\nimport { px } from \"../shared/px\";\r\n\r\n// 城乡地区互联网普及率\r\n\r\nexport const Chart5 = () => {\r\n    const chartDiv = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        const myChart = echarts.init((chartDiv as any).current);\r\n        console.log(1, px(12));\r\n        console.log(2, px)\r\n        let options = createEchartOption({\r\n            legend: {\r\n                data: ['农村', '城镇'],\r\n                bottom: px(2),\r\n                itemHeight: px(6),\r\n                textStyle: {\r\n                    color: '#fff',\r\n                    fontSize: px(12),\r\n                }\r\n            },\r\n            grid: {\r\n            left: '10%',\r\n            top: '10%',\r\n            right: '10%',\r\n            bottom: '28%'\r\n        },\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: ['2016.12', '2017.12', '2018.12', '2020.3', '2020.12'],\r\n                axisTick: { show: false},\r\n                axisLine: { show: false },\r\n                splitLine: {show: true, lineStyle: {color: '#073E78'}},\r\n            },\r\n            yAxis: {\r\n                show: true,\r\n                splitLine: {lineStyle: {color: '#073E78'}},\r\n            },\r\n            series: [\r\n                {\r\n                    name: '城镇',\r\n                    type: 'line',\r\n                    color: '#EE6666',\r\n                    symbolSize: px(4),\r\n                    data: [69.1, 71.0, 74.8, 76.5, 79.8],\r\n                },\r\n                {\r\n                    name: '农村',\r\n                    type: 'line',\r\n                    color: '#5470C6',\r\n                    symbolSize: px(4),\r\n                    data: [33.1, 35.4, 38.4, 46.2, 55.9],\r\n                }\r\n            ]\r\n        });\r\n        options && myChart.setOption(options);\r\n    },[])\r\n    return (\r\n        <ChartDiv title=\"城乡地区互联网普及率\">\r\n            <div ref={chartDiv} style={{ height: '100%', width:'100%'}}></div>\r\n        </ChartDiv>\r\n    )\r\n}","import { useEffect, useRef } from \"react\";\r\nimport * as echarts from 'echarts';\r\nimport { createEchartOption } from \"../shared/create-echarts-option\";\r\nimport { ChartDiv } from \"./chart-div\";\r\nimport { px } from \"../shared/px\";\r\n\r\n// 网站数量\r\n\r\nexport const Chart6 = () => {\r\n    const chartDiv = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        const myChart = echarts.init((chartDiv as any).current);\r\n        let option = createEchartOption({\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: ['2014','2015', '2016', '2017', '2018', '2019', '2020'],\r\n                splitLine: { show: true, lineStyle: { color: '#073E78' } },\r\n                axisTick: {show: false},\r\n                axisLine: {show: false},\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                splitLine: {\r\n                    lineStyle: { color: '#073E78' }\r\n                },\r\n            },\r\n            series: [{\r\n                type: 'line',\r\n                data: [335, 425, 482,533,523, 497,443],\r\n                symbol: 'circle',\r\n                symbolSize: px(8),\r\n                lineStyle: {width: px(2)},\r\n                areaStyle: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                    offset: 0,\r\n                    color: '#414a9f'\r\n                }, {\r\n                    offset: 1,\r\n                    color: '#1b1d52'\r\n                }]),\r\n                }\r\n            }]\r\n        });\r\n        option && myChart.setOption(option);\r\n    },[])\r\n    return (\r\n            <ChartDiv title=\"网站数量\">\r\n                <div ref={chartDiv} style={{ height: '100%', width:'100%'}}></div>\r\n            </ChartDiv>\r\n    )\r\n}","import { useEffect, useRef } from \"react\";\r\nimport * as echarts from 'echarts';\r\nimport { createEchartOption } from \"../shared/create-echarts-option\";\r\nimport { ChartDiv } from \"./chart-div\";\r\n\r\n// 网页数量热点区域\r\n\r\nexport const Chart7 = () => {\r\n    const china = require('../geo/china.json');\r\n    const chartDiv = useRef(null);\r\n    const colors = {'北京市': '#f33646', '浙江省': '#c945b3', '广东省': '#ee9d06', '山东省': '#eede06', '江苏省': '#0699ee', '上海市': '#06e6ee'};\r\n    useEffect(() => {\r\n        // console.log(china)\r\n        var myChart = echarts.init((chartDiv as any).current);\r\n        // @ts-ignore\r\n        echarts.registerMap('CN', china);\r\n        const option = createEchartOption({\r\n            xAxis: { show: false },\r\n            yAxis: { show: false },\r\n            series: [\r\n                {\r\n                    type: 'map',\r\n                    mapType: 'CN', // 自定义扩展图表类型\r\n                    data: [\r\n                        { name: '北京市', value: 100 },\r\n                    ],\r\n                    label: { show: false, color: 'white' },\r\n                    itemStyle: {\r\n                        areaColor: '#010D3D',\r\n                        color: colors['北京市'],\r\n                        borderColor: '#01A7F7',\r\n                        emphasis: {\r\n                            label: { color: 'white' },\r\n                            areaColor: '#5470C6',\r\n                        },\r\n                    }\r\n                },\r\n                {\r\n            \r\n                    type: 'map',\r\n                    mapType: 'CN', // 自定义扩展图表类型\r\n                    data: [\r\n                        { name: '浙江省', value: 50 },\r\n                    ],\r\n                    itemStyle: {\r\n                        areaColor: '#010D3D',\r\n                        color: colors['浙江省'],\r\n                        borderColor: 'yellow',\r\n                        emphasis: {\r\n                            label: { color: 'white' },\r\n                            areaColor: '#5470C6',\r\n                        },\r\n                    }\r\n                },\r\n                {\r\n                    type: 'map',\r\n                    mapType: 'CN', // 自定义扩展图表类型\r\n                    data: [\r\n                        { name: '广东省', value: 75 },\r\n                    ],\r\n                    itemStyle: {\r\n                        areaColor: '#010D3D',\r\n                        color: colors['广东省'],\r\n                        borderColor: '#01A7F7',\r\n                        emphasis: {\r\n                            label: { color: 'white' },\r\n                            areaColor: '#5470C6',\r\n                        },\r\n                    }\r\n                },\r\n                {\r\n            \r\n                    type: 'map',\r\n                    mapType: 'CN', // 自定义扩展图表类型\r\n                    data: [\r\n                        { name: '山东省', value: 50 },\r\n                    ],\r\n                    itemStyle: {\r\n                        areaColor: '#010D3D',\r\n                        color: colors['山东省'],\r\n                        borderColor: 'yellow',\r\n                        emphasis: {\r\n                            label: { color: 'white' },\r\n                            areaColor: '#5470C6',\r\n                        },\r\n                    }\r\n                },\r\n                {\r\n            \r\n                    type: 'map',\r\n                    mapType: 'CN', // 自定义扩展图表类型\r\n                    data: [\r\n                        { name: '江苏省', value: 35 },\r\n                    ],\r\n                    itemStyle: {\r\n                        areaColor: '#010D3D',\r\n                        color: colors['江苏省'],\r\n                        borderColor: 'yellow',\r\n                        emphasis: {\r\n                            label: { color: 'white' },\r\n                            areaColor: '#5470C6',\r\n                        },\r\n                    }\r\n                },\r\n                {\r\n            \r\n                    type: 'map',\r\n                    mapType: 'CN', // 自定义扩展图表类型\r\n                    data: [\r\n                        { name: '上海市', value: 20 },\r\n                    ],\r\n                    itemStyle: {\r\n                        areaColor: '#010D3D',\r\n                        color: colors['上海市'],\r\n                        borderColor: 'yellow',\r\n                        emphasis: {\r\n                            label: { color: 'white' },\r\n                            areaColor: '#5470C6',\r\n                        },\r\n                    }\r\n                },\r\n            ]\r\n        });\r\n        option && myChart.setOption(option);\r\n    }, []);\r\n    return (\r\n            <ChartDiv title=\"网页数量热点区域\">\r\n            <div ref={chartDiv} style={{ height: '100%', width: '100%' }}></div>\r\n            <div className=\"geoText\">中国部分地区地图</div>\r\n            </ChartDiv>\r\n    )\r\n}","import React, {useEffect, useRef} from 'react';\nimport * as echarts from 'echarts';\nimport {createEchartOption} from '../shared/create-echarts-option';\nimport {px} from '../shared/px';\nimport styled from 'styled-components';\n\nconst ChartWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n`;\nconst Content = styled.div`\n  height:100%;\n  width: 100%;\n  flex-grow: 1;\n  position: relative;\n`;\nconst ChartDiv = styled.div`\n  height:100%;\n  width: 100%;\n // border: 1px solid #fff;\n`;\n\nconst ChartText = styled.div`\n  position: absolute;\n  top:50%;\n  left:50%;\n  transform: translate(-75%,-50%);\n  color: #fff;\n`;\n  \n\nexport const Chart8 = () => {\n  const chartDiv1 = useRef<HTMLDivElement>(null);\n  const chartDiv2 = useRef<HTMLDivElement>(null);\n  const chartDiv3 = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    const myChart1 = echarts.init((chartDiv1 as any).current);\n    const myChart2 = echarts.init((chartDiv2 as any).current);\n    const myChart3 = echarts.init((chartDiv3 as any).current);\n\n    const option1 = createEchartOption({\n      xAxis: { show: false },\n      yAxis: { show: false },\n      legend: {\n        data: ['女', '男'],\n        orient:'vertical',\n        right: px(20),\n        bottom:'center',\n        itemHeight: px(6),\n        itemWidth: px(6),\n        textStyle: {\n            color: '#fff',\n            fontSize: px(8),\n        }\n      },\n      series: [{\n        name:'性别结构',\n        type: 'pie',\n        radius: ['40%', '50%'],\n        center:['45%', '50%'],\n        avoidLabelOverlap: false,\n        data: [\n          { value: 49.0, name: \"女\" },\n          { value: 51.0, name: \"男\" },\n        ],\n        label: {\n          show: true,\n          position: 'outside',\n          textStyle: { color: 'white', fontSize: px(8) },\n          formatter(options:any) {\n            return options.value + '%';\n          }\n        },\n        labelLine: {show: false, length:0,length2:0},\n      }]\n    });\n\n    const option2 = createEchartOption({\n      xAxis: { show: false },\n      yAxis: { show: false },\n   \n      legend: {\n        data: ['0-19', '20-29', '30-39', '40-59', '>=60'],\n        orient:'vertical',\n        right: px(6),\n        bottom:px(24),\n        itemHeight: px(6),\n        itemWidth: px(6),\n        textStyle: {\n          color: '#fff',\n          fontSize: px(8),\n        }\n      },\n      series: [{\n        name:'年龄结构',\n        type: 'pie',\n        radius: ['40%', '50%'],\n        center:['45%', '50%'],\n        avoidLabelOverlap: false,\n        data: [\n          { value: 16.6, name: \"0-19\" },\n          { value: 17.8, name: \"20-29\" },\n          { value: 20.5, name: \"30-39\" },\n          { value: 33.9, name: \"40-59\" },\n          { value: 11.2, name: \">=60\" },\n        ],\n          label: {\n          show: true,\n          position: 'outside',\n          textStyle: { color: 'white', fontSize: px(8) },\n          formatter(options:any) {\n            return options.value + '%';\n          }\n        },\n        labelLine: {show: false, length:0,length2:0},\n      }]\n    });\n    const option3 = createEchartOption({\n      xAxis: { show: false },\n      yAxis: { show: false },\n      legend: {\n        data: ['<=1k', '1k-3k',  '3k-5k', '5k-8k', '>=8k'],\n        orient:'vertical',\n        right: px(10),\n        bottom: px(24),\n        itemHeight: px(6),\n        itemWidth: px(6),\n        textStyle: {\n          color: '#fff',\n          fontSize: px(8),\n        }\n      },\n      series: [{\n        name:'收入结构',\n        type: 'pie',\n        radius: ['40%', '50%'],\n        center:['45%', '50%'],\n        avoidLabelOverlap: false,\n        data: [\n          { value: 26.1, name: \"<=1k\" },\n          { value: 25.0, name: \"1k-3k\" },\n          { value: 19.6, name: \"3k-5k\" },\n          { value: 14.5, name: \"5k-8k\" },\n          { value: 14.8, name: \">=8k\" },\n        ],\n        label: {\n          show: true,\n          position: 'outside',\n          textStyle: { color: 'white', fontSize: px(8) },\n          formatter(options:any) {\n            return options.value + '%';\n          }\n        },\n        labelLine: {show: false, length:0,length2:0},\n      }]\n    });\n    option1 && myChart1.setOption(option1);\n    option2 && myChart2.setOption(option2);\n    option3 && myChart3.setOption(option3);\n  }, [])\n  return (\n    <ChartWrapper className='chart-8'>\n      <Content>\n        <ChartDiv ref={chartDiv1} />\n        <ChartText className='text'>性别</ChartText>\n      </Content>\n      <Content>\n        <ChartDiv ref={chartDiv2} />\n        <ChartText className='text'>年龄</ChartText>\n      </Content>\n      <Content>\n        <ChartDiv ref={chartDiv3} />\n        <ChartText className='text'>收入</ChartText>\n      </Content>\n    </ChartWrapper>\n  );\n};\n","import React from \"react\";\r\nimport './home.scss';\r\nimport { Chart1 } from '../components/chart-1';\r\nimport { Chart2 } from '../components/chart-2';\r\nimport { Chart3 } from '../components/chart-3';\r\nimport { Chart4 } from '../components/chart-4';\r\nimport { Chart5 } from '../components/chart-5';\r\nimport { Chart6 } from '../components/chart-6';\r\nimport { Chart7 } from '../components/chart-7';\r\nimport { Chart8 } from '../components/chart-8';\r\nimport { Test } from \"../components/test\";\r\n\r\nexport const Home = () => {\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <header>\r\n                <div className=\"hd\">\r\n                    <div className=\"bg\"><span></span></div>\r\n                    <h1>中国网络发展现状</h1>\r\n                </div>\r\n            \r\n            </header>\r\n            <main> \r\n                <section className=\"section-1\">\r\n                    <div className=\"chart chart-11\">\r\n                       <Chart1 />\r\n                    </div>\r\n                    <div className=\"chart chart-12\">\r\n                        <Chart4 />\r\n                    </div>\r\n                    <div className=\"chart chart-13\">\r\n                        <Chart2 />\r\n                    </div>\r\n                </section>\r\n                <section className=\"section-2\">\r\n                    <div className=\"chart-22\">\r\n                        <Chart7 />                    </div>\r\n                    <div className=\"chart-23\">\r\n                        <Chart8 />\r\n                    </div>\r\n                </section>\r\n                <section className=\"section-3\">\r\n                    <div className=\"chart chart-31\">\r\n                        <Chart6 />\r\n                    </div>\r\n                    <div className=\"chart chart-32\">\r\n                        <Chart5 />\r\n                    </div>\r\n                    <div className=\"chart chart-33\">\r\n                        <Chart3 />\r\n                    </div>\r\n                </section>\r\n            </main>\r\n            <footer>\r\n                数据来源于《第47次中国互联网发展状况统计报告》，统计日期截止2020年12月。\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import { Route, HashRouter, Switch } from 'react-router-dom';\nimport { Home } from './pages/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route path='/'>\n            <Home />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './shared/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}